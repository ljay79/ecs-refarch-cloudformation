Description: >
    This is an example of a long running ECS service that serves a JSON API of products.

Parameters: 

    RessourcePrefix:
        Description: An ressources name prefix that will be prefixed to resource names
        Type: String

    EnvironmentType:
        Description: 'Definition of the Environment type: Test, Staging or Production.'
        Default: Test
        Type: String
        AllowedValues:
          - Production
          - Staging
          - Test
        ConstraintDescription: 'You must specify Test, Staging, or Production.'

    ProjectName:
      Description: Short name of project this stack is used in/for.
      Default: Project Name
      Type: String
      MinLength: 2
      MaxLength: 15
      AllowedPattern: '[A-Za-z0-9][-. A-Za-z0-9]*'
      ConstraintDescription: 'Must be between 2 and 15 characters long and may contain alphanumeric characters, hyphens (-), and dots (.), but must start with alphanumeric.'

    VPC:
        Description: The VPC that the ECS cluster is deployed to
        Type: AWS::EC2::VPC::Id
        
    Cluster:
        Description: Please provide the ECS Cluster ID that this service should run on
        Type: String

    DesiredCount: 
        Description: How many instances of this task should we run across our cluster?
        Type: Number
        Default: 2

    Listener:
        Description: The Application Load Balancer listener to register with
        Type: String

    Path: 
        Description: The path to register with the Application Load Balancer
        Type: String
        Default: /products

Resources:

    Service: 
        Type: AWS::ECS::Service
        DependsOn: ListenerRule
        Properties: 
            Cluster: !Ref Cluster
            Role: !Ref ServiceRole
            DesiredCount: !Ref DesiredCount
            TaskDefinition: !Ref TaskDefinition
            LoadBalancers: 
                - ContainerName: "product-service"
                  ContainerPort: 8001
                  TargetGroupArn: !Ref TargetGroup

    TaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
            Family: product-service
            ContainerDefinitions:
                - Name: product-service
                  Essential: true
                  Image: 275396840892.dkr.ecr.us-east-1.amazonaws.com/ecs-refarch-cloudformation/product-service:1.0.0
                  Memory: 128
                  PortMappings:
                    - ContainerPort: 8001
                  LogConfiguration:
                    LogDriver: awslogs
                    Options:
                        awslogs-group: !Sub ${RessourcePrefix}-product-service
                        awslogs-region: !Ref AWS::Region
    
    CloudWatchLogsGroup:
        Type: AWS::Logs::LogGroup
        Properties: 
            LogGroupName: !Sub ${RessourcePrefix}-product-service
            RetentionInDays: 365  

    TargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            VpcId: !Ref VPC
            Port: 80
            Protocol: HTTP
            Matcher: 
                HttpCode: 200-299
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: /products
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 5
            HealthyThresholdCount: 2
            Tags:
              - Key: Environment
                Value: !Ref EnvironmentType
              - Key: Project
                Value: !Ref ProjectName
    
    ListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            ListenerArn: !Ref Listener
            Priority: 2
            Conditions:
                - Field: path-pattern
                  Values: 
                    - !Ref Path
            Actions:
                - TargetGroupArn: !Ref TargetGroup
                  Type: forward

    # This IAM Role grants the service access to register/unregister with the 
    # Application Load Balancer (ALB). It is based on the default documented here:
    # http://docs.aws.amazon.com/AmazonECS/latest/developerguide/service_IAM_role.html
    ServiceRole: 
        Type: AWS::IAM::Role
        Properties: 
            RoleName: !Sub ${RessourcePrefix}-ECS-product-service
            Path: /
            AssumeRolePolicyDocument: |
                {
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": { "Service": [ "ecs.amazonaws.com" ]},
                        "Action": [ "sts:AssumeRole" ]
                    }]
                }
            Policies: 
                - PolicyName: !Sub ecs-service-${RessourcePrefix}
                  PolicyDocument: 
                    {
                        "Version": "2012-10-17",
                        "Statement": [{
                                "Effect": "Allow",
                                "Action": [
                                    "ec2:AuthorizeSecurityGroupIngress",
                                    "ec2:Describe*",
                                    "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                    "elasticloadbalancing:Describe*",
                                    "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                    "elasticloadbalancing:DeregisterTargets",
                                    "elasticloadbalancing:DescribeTargetGroups",
                                    "elasticloadbalancing:DescribeTargetHealth",
                                    "elasticloadbalancing:RegisterTargets"
                                ],
                                "Resource": "*"
                        }]
                    }
